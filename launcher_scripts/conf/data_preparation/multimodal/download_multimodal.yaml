run:
  name: download_multimodal
  results_dir: ${base_results_dir}/${.name}
  time_limit: "4:00:00"
  dependency: "singleton"
  bcp_preproc_npernode: 2  # 2 should be safe to use and x2 times faster.

dataset_repo_id: laion/laion-art  # huggingface dataset repo id
# e.g. # laion/laion2B-en-aesthetic  kakaobrain/coyo-700m, ChristophSchuhmann/improved_aesthetics_5plus
dataset_output_root: ${data_dir}/laion--laion-art

download_parquet:
  enable: False
  output_dir: ${..dataset_output_root}/parquet
  parquet_subpartitions: 3  # increase the number of partitions to reduce the download time of each job
  parquet_pattern: "*.parquet"  # files to be included in the hugging face repo

download_images:
  enable: False
  output_dir: ${..dataset_output_root}/tarfiles_raw
  num_parquets_downloaded: 1  # Number of parquet files in huggingface repo.
  # laion/laion-art: 1
  # laion/laion2B-en-aesthetic: 128
  # kakaobrain/coyo-700m: 128
  # ChristophSchuhmann/improved_aesthetics_5plus: 64
  # Only used if download_images is queued as a dependency before download_parquet finishes.
  # Otherwise script will automatically count the number of parquet files downloaded.
  # Note that node_array_size for this stage will be parquet_subpartitions x num_parquets_downloaded
  download_num_processes: -1  # set to number of CPUs in the job (-1 defaults to slurm cpus_per_task)
  download_num_threads: 128  # tune by monitoring CPU usage
  img2dataset_additional_arguments:  # see https://github.com/rom1504/img2dataset for complete list of parameters
    encode_quality: 95  # jpeg compression quality (100 is best, but still lossy)
    resize_mode: no  # optionally resize after downloading to save disk space

reorganize_tar:
  enable: True
  output_dir: ${..dataset_output_root}/tarfiles_reorganized
  node_array_size: 2  # number of concurrent jobs
  tar_chunk_size: 1000  # number of training examples in each output tar file
  file_ext_in_tar:  # target extensions in each
    - .jpg
    - .txt

precache_encodings:
  enable: False
  output_dir: ${..dataset_output_root}/tarfiles_precached
  node_array_size: 2
  output_wdinfo_path: ${..dataset_output_root}/wdinfo.pkl
  precache_config_path: ${launcher_scripts_path}/conf/data_preparation/multimodal/precache_sd
